hsv_map=((0,1,1), (0,1,1), (1,1,1), (2,1,1), (3,1,1), (3,1,1), (4,1,1), (5,1,1), (6,1,1), (7,1,1), (7,1,1), (8,1,1), (9,1,1), (10,1,1), (11,1,1), (11,1,1), (12,1,1), (13,1,1), (14,1,1), (15,1,1), (15,1,1), (16,1,1), (17,1,1), (18,1,1), (19,1,1), (19,1,1), (20,1,1), (21,1,1), (22,1,1), (23,1,1), (24,1,1), (24,1,1), (24,1,1), (25,1,1), (25,1,1), (26,1,1), (26,1,1), (26,1,1), (27,1,1), (27,1,1), (28,1,1), (28,1,1), (28,1,1), (29,1,1), (29,1,1), (30,1,1), (30,1,1), (30,1,1), (31,1,1), (31,1,1), (32,1,1), (32,1,1), (32,1,1), (33,1,1), (33,1,1), (34,1,1), (34,1,1), (34,1,1), (35,1,1), (35,1,1), (36,1,1), (36,1,1), (36,1,1), (37,1,1), (37,1,1), (37,1,1), (38,1,1), (38,1,1), (39,1,1), (39,1,1), (40,1,1), (40,1,1), (40,1,1), (41,1,1), (41,1,1), (41,1,1), (42,1,1), (42,1,1), (43,1,1), (43,1,1), (44,1,1), (44,1,1), (44,1,1), (45,1,1), (45,1,1), (45,1,1), (46,1,1), (46,1,1), (47,1,1), (47,1,1), (48,1,1), (48,1,1), (48,1,1), (49,1,1), (49,1,1), (49,1,1), (50,1,1), (50,1,1), (51,1,1), (51,1,1), (52,1,1), (52,1,1), (52,1,1), (53,1,1), (53,1,1), (53,1,1), (54,1,1), (54,1,1), (55,1,1), (55,1,1), (56,1,1), (56,1,1), (56,1,1), (57,1,1), (57,1,1), (57,1,1), (58,1,1), (58,1,1), (59,1,1), (59,1,1), (60,1,1), (60,1,1), (61,1,1), (62,1,1), (63,1,1), (64,1,1), (64,1,1), (65,1,1), (66,1,1), (67,1,1), (68,1,1), (68,1,1), (69,1,1), (70,1,1), (71,1,1), (72,1,1), (72,1,1), (73,1,1), (74,1,1), (75,1,1), (76,1,1), (76,1,1), (77,1,1), (78,1,1), (79,1,1), (80,1,1), (80,1,1), (81,1,1), (82,1,1), (83,1,1), (84,1,1), (85,1,1), (87,1,1), (88,1,1), (90,1,1), (92,1,1), (93,1,1), (95,1,1), (96,1,1), (98,1,1), (100,1,1), (101,1,1), (103,1,1), (104,1,1), (106,1,1), (108,1,1), (108,1,0.988), (109,1,0.972), (109,1,0.96), (110,1,0.945), (111,1,0.933), (112,1,0.921), (112,1,0.905), (113,1,0.894), (114,1,0.878), (115,1,0.866), (116,1,0.854), (117,1,0.839), (118,1,0.827), (119,1,0.811), (120,1,0.8), (122,1,0.792), (124,1,0.788), (126,1,0.78), (128,1,0.772), (130,1,0.764), (132,1,0.76), (135,1,0.752), (136,1,0.745), (139,1,0.725), (141,1,0.725), (144,1,0.717), (146,1,0.709), (149,1,0.705), (151,1,0.705), (154,1,0.698), (155,1,0.69), (157,1,0.686), (158,1,0.678), (160,1,0.67), (162,1,0.666), (163,1,0.658), (165,1,0.65), (166,1,0.647), (168,1,0.631), (170,1,0.627), (172,1,0.619), (174,1,0.613), (176,1,0.61), (178,1,0.607), (180,1,0.6), (181,1,0.607), (183,1,0.611), (185,1,0.619), (187,1,0.627), (189,1,0.631), (191,1,0.639), (193,1,0.647), (194,1,0.65), (196,1,0.658), (197,1,0.666), (199,1,0.67), (201,1,0.678), (202,1,0.686), (204,1,0.69), (205,1,0.698), (207,1,0.705), (208,1,0.709), (209,1,0.717), (211,1,0.725), (212,1,0.733), (213,1,0.737), (215,1,0.737), (216,1,0.737), (218,1,0.737), (219,1,0.737), (220,1,0.737), (221,1,0.737), (222,1,0.764), (224,1,0.788), (224,1,0.8), (225,0.99,0.792), (226,0.985,0.788), (227,0.974,0.78), (228,0.964,0.772), (228,0.958,0.764), (229,0.948,0.76), (230,0.937,0.752), (231,0.931,0.745), (233,0.92,0.737), (234,0.909,0.733), (235,0.902,0.725), (236,0.89,0.717), (237,0.878,0.709), (238,0.872,0.705), (240,0.859,0.698), (241,0.869,0.69), (242,0.874,0.686), (243,0.884,0.678), (245,0.894,0.67), (246,0.9,0.666), (247,0.91,0.658), (249,0.921,0.65), (250,0.927,0.647), (252,0.968,0.619), (253,0.968,0.619), (254,0.968,0.619), (256,0.98,0.611), (257,0.987,0.607), (258,0.987,0.607), (260,1,0.6), (260,1,0.6), (260,1,0.6), (261,1,0.6), (261,1,0.6), (261,1,0.6), (261,1,0.6), (262,1,0.6), (262,1,0.6), (263,1,0.6), (263,1,0.6), (264,1,0.6), (264,1,0.6), (264,1,0.6), (264,1,0.6), (265,1,0.6), (266,1,0.6), (267,1,0.6), (268,1,0.6), (268,1,0.6), (270,1,0.6), (271,1,0.6), (272,1,0.6), (272,1,0.6), (274,1,0.6), (274,1,0.6), (276,1,0.6), (276,1,0.6), (278,1,0.6), (278,1,0.6), (280,1,0.6), (281,1,0.6), (282,1,0.6), (284,1,0.6), (285,1,0.6), (286,1,0.6), (287,1,0.6), (289,1,0.6), (290,1,0.6), (292,1,0.6), (293,1,0.6), (294,1,0.6), (296,1,0.6), (297,1,0.6), (298,1,0.6), (300,1,0.6), (301,1,0.611), (302,1,0.627), (303,1,0.639), (304,1,0.654), (305,1,0.666), (306,1,0.678), (308,1,0.694), (308,1,0.705), (310,1,0.721), (310,1,0.733), (311,1,0.745), (312,1,0.76), (313,1,0.772), (314,1,0.788), (315,1,0.8), (316,1,0.807), (317,1,0.811), (319,1,0.819), (320,1,0.827), (321,1,0.831), (322,1,0.849), (324,1,0.859), (325,1,0.869), (326,1,0.879), (327,1,0.889), (328,1,0.899), (329,1,0.909), (331,1,0.905), (332,1,0.905), (333,1,0.898), (335,1,0.89), (337,1,0.886), (339,1,0.878), (340,1,0.87), (342,1,0.866), (344,1,0.858), (346,1,0.85), (348,1,0.847), (349,1,0.917), (351,1,0.925), (353,1,0.933), (355,1,0.937), (356,1,0.945), (359,1,0.972), (359,1,1))

def rgb2hex(r,g,b):
    s=''
    for item in [r,g,b]:
        a,b=item/16,item%16
        s=s+'0123456789ABCDEF'[a]+'0123456789ABCDEF'[b]
    return s

def hsv2hex(hue, sat, val):
    if val==0: return rgb2hex(0,0,0)
    hue%=360
    sat/=100
    val/=100
    hue*=1.0/60
    i = int(hue) 
    f = hue-i
    p = val*(1-sat)
    q = val*(1-(sat*f))
    t = val*(1-(sat*(1-f)))
    if i==0: red,green,blue=val,t,p 
    elif i==1: red,green,blue=q,val,p 
    elif i==2: red,green,blue=p,val,t
    elif i==3: red,green,blue=p,q,val
    elif i==4: red,green,blue=t,p,val
    elif i==5: red,green,blue=val,p,q
    return rgb2hex(int(red*255),int(green*255),int(blue*255))

def generate_color_scheme(hue,saturation=100,value=100):
    """
    hue should be between 0 and 360
    saturation,value between 0 and 100
    """
    offset=180
    hexs=[]
    reductions=((0.500,1.000),(0.25,1.00),(0.666,0.666),
                (0.666,0.333),(0.50,0.75),(0.250,0.870))
    pos=(hue+offset)%360
    for h in [hue,pos]:
        a,b,c=hsv_map[h];
        s=saturation*float(b)
        v=value*float(c)
        rowhexs=[hsv2hex(a,s,v)]
        for d,e in reductions:
            rowhexs.append(hsv2hex(a, s*d,v*e))
        hexs.append(rowhexs)
    return hexs

def map_color_scheme(hue,saturation=100,value=100):
    from gluon.storage import Storage
    colors=generate_color_scheme(hue,saturation,value)
    return Storage(dict(page_bg=colors[0][4],
		        page_fg= colors[1][2],
                        main_bg = colors[0][2],
                        main_fg = colors[1][4],
                        link_fg= colors[1][0],
                        header_bg = colors[0][0],
                        header_fg = colors[1][1],
                        footer_bg = colors[0][0],
                        footer_fg = colors[1][1],
                        menu_bg= colors[0][1],
                        status_bg= colors[0][1],
                        status_fg= colors[1][5],
                        h1_fg = colors[0][3],
                        h2_fg = colors[0][5],
                        border = colors[1][0],
                        padding='20px 20px',
                        width='800px',
                        font_size="12pt",
                        font_family="Times New Roman",
                        header_height=150,
                        header_font_size=50))


    
